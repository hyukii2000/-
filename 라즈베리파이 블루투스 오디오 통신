import signal
import sys
import serial
import time
from pygame import mixer

# 시리얼 포트와 블루투스 스피커 MAC 주소 설정
serial_port = '/dev/rfcomm0'  # 아두이노 시리얼 포트 경로
baud_rate = 9600
bluetooth_speaker_address = 'F0:EF:86:49:5F:00'  # 블루투스 스피커 MAC 주소

# SIGINT 핸들러 함수
def sigint_handler(signal, frame):
    print('SIGINT 신호가 감지되었습니다. 종료하려면 다시 한 번 Ctrl+C를 누르세요.')

# SIGINT 핸들러 등록
signal.signal(signal.SIGINT, sigint_handler)

# 메인 프로그램 실행
print('프로그램이 실행 중입니다. 종료하려면 Ctrl+C를 누르세요.')

# 프로그램이 종료될 때까지 대기
while True:
    try:
        pass
    except KeyboardInterrupt:
        print('Ctrl+C가 눌렸습니다. 프로그램을 종료합니다.')
        sys.exit(0)

# 아두이노에 신호를 송신
    ser.write(b'your_signal')  # 아두이노에 보낼 신호를 작성합니다.
    ser.close()  # 시리얼 포트를 닫습니다.
    pass

# 시리얼 통신 초기화
ser = serial.Serial(serial_port, baud_rate)
ser.flushInput()

# 아두이노에 신호를 보내는 함수를 정의합니다.
def send_signal(signal):
    # 아두이노로 신호를 보냅니다.
    ser.write(signal.encode())

# 아두이노로부터 수신된 응답을 출력합니다.
response = ser.readline().decode().strip()
print("아두이노로부터 수신된 응답:", response)

# 파이게임 초기화
mixer.init()

# 블루투스 스피커 설정
mixer.music.load('home/pi/Downloads/')  # 재생할 오디오 파일 경로

# 시리얼 통신으로부터 데이터 수신 및 처리
while True:
    try:
        data = ser.readline().strip().decode('utf-8')
        print('수신 데이터:', data)
        
        if data == 'play':
            mixer.music.play()
        elif data == 'pause':
            mixer.music.pause()
        elif data == 'stop':
            mixer.music.stop()
        elif data.startswith('volume'):
            _, volume = data.split(':')
            volume = float(volume)
            mixer.music.set_volume(volume)
        elif data == 'exit':
            break
    except KeyboardInterrupt:
        break

# 시리얼 통신 및 파이게임 정리
ser.close()
mixer.quit()
